name: Test and Build

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    name: Build frontend (Node ${{ matrix.node }})
    strategy:
      matrix:
        node: [12, 14]

    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache Yarn
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: yarn install

      - name: Run frontend tests
        working-directory: ./frontend
        run: yarn run test:unit

  build-backend:
    runs-on: ubuntu-latest
    name: Build backend (Java ${{ matrix.java }})
    strategy:
      matrix:
        java: [8, 11]
    env:
      SBT_BIN: sbt -Dsbt.override.build.repos=true
      MONGODB_URI: mongodb://127.0.0.1:27017/test

    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Cache SBT
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
            ~/.m2
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}

      - name: Setup Scala
        uses: olafurpg/setup-scala@v5
        with:
          java-version: openjdk@1.${{ matrix.java }}

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.3.0
        with:
          mongodb-version: 4.2

      - name: Install local dependencies
        run: ./bin/install-local-deps.sh

      - name: Compile sbt
        run: sbt compile stage
        timeout-minutes: 30

      - name: Run backend tests
        run: sbt coverage test

      - name: Create coverage report
        run: sbt coverageReport

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1

  scalafmt:
    runs-on: ubuntu-latest
    name: Scalafmt

    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Formatting Scala
        run: sbt scalafmt scalafmtSbt && git diff --exit-code

      - name: Count Lines of Code (cloc)
        uses: djdefi/cloc-action@2
